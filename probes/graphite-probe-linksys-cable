#!/usr/bin/perl

# TODO:  remove dependency on curl.  Maybe use wget instead?

# purpose:  Graphite probe report statistics from Linksys cable modem
use strict;
use Getopt::Long;
use vars qw (%Config);
use Time::Local;
use POSIX 'strftime';
use Sys::Hostname;

our @Fields=("SNR", "Downstream Power", "Symbol Rate", "Provisioned Rate", "Upstream Power");

$Config{date}=time;
$Config{count}=60;

unless(GetOptions(
	   "debug" => \$Config{debug},
	   "host=s" => \$Config{host},
	   "prefix=s" => \$Config{prefix},
	   "graphite-server=s" => \$Config{graphite},
       )) {
    print STDERR "Invalid usage\n";
    exit 1;
}


die("Must specify -host") unless $Config{host};
$Config{prefix}="system." . $Config{host} unless $Config{prefix};

&main;


sub main {
    my $graphite;
    if($Config{graphite}) {
        open($graphite, "|nc -q 2 $Config{graphite} 2003") || die("Failed to netcat to $Config{graphite}: $!");
	select $graphite; 
    }


    open(my $curl, "curl -s http://$Config{host}/RgConnect.asp|") || die("Failed to curl cable modem: $!");

    my %fields;
    my $current;
    my $section;
    my $fieldre = join('|', @Fields);

    &debug("Field re is $fieldre");

    while(<$curl>) {
	chop;
#	&debug("[$_]");
	if(/>\s*(Downstream|Upstream) Channel/) {
	    $section = $1 ;
	    &debug("Found section marker for $section");
	}
	if(/td.*($fieldre)/) {
	    $current = $1;
	    &debug("Found field $current");
	}
	if($current && /td.*>(&nbsp;)?(-?[\d\.]+)\s*([^<]+)/) {
	    $fields{$section}{"$current.$3"}=$2;
	    $current = undef;
	}
    }


    close $curl;

    foreach my $section (sort keys %fields) {
	foreach my $metric (sort keys %{$fields{$section}}) {
	    &write("$section.$metric", $fields{$section}{$metric});
	}
    }

    close $graphite if $graphite;
}

sub write {
    my $key = shift;
    my $value = shift;
    my $date = shift;

    $value = 0 unless $value;
    $date = $Config{date} unless $date;

    my $metric = "$Config{prefix}.$key";

    $metric =~ s/[^a-zA-Z0-9_\.-]/_/g;

    print "$metric $value $date\n";
}

sub debug {
    return unless $Config{debug};

    print "@_\n";
}
